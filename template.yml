Resources:
   LambdaFunctionRole:
     Type: AWS::IAM::Role
     Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: "sts:AssumeRole"
        Policies:
          - PolicyName: lambdaexecution
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action: ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents", "s3-object-lambda:WriteGetObjectResponse"]
                  Resource: "*"
   S3LambdaFunction:
     Type: AWS::Lambda::Function
     Properties:
        Runtime: python3.9
        Handler: index.handler
        Role: !GetAtt LambdaFunctionRole.Arn
        Code: Zipfile | 
          def handler(event, context):
            # enter code here
   S3VpcEndpoint:
     Type: Custom::S3Endpoint
     Properties:
        ServiceToken: !GetAtt S3LambdaFunction.Arn
        MySubnetIDs:
        - !Ref FirstSubnet
        - !Ref SecondSubnet
        MySecurityGroupID: !Ref SecurityGroup
        MyVpcID: !Ref VPC